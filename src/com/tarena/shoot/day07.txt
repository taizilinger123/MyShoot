Shoot游戏第一天

做项目是学东西最快的时期

24个步骤
第一天：讲16个--------页面上能画出4个对象
第二天：讲4个---------所有对象动起来
第三天：讲4个---------开打

英雄机打掉一个敌机------得5分
英雄机可以发射子弹(单发或者双发)
默认为单发(火力值为0)
英雄机打掉小蜜蜂后得奖励，
奖励分两种：一种是命，一种是火力值

发射一次双倍减2
一次得40火力值--------40 
发了5次-------------40-10=30
得了一次火力----------30+40=70
得了一次火力----------70+40=110
火力值为10000
英雄机死了一次---------0(单倍)

从上往下随机产生敌人(敌机+小蜜蜂)

class FlyingObject{//飞行物
   image,width,height,x,y
}
interface Enemy{//敌机
   int getScore();
}
interface Award{//奖励
   int getType();
}
class Hero extends FlyingObject{//英雄机
}
class Airplane extends FlyingObject implements Enemy{//敌机
}
class Bee extends FlyingObject implements Award{//小蜜蜂
}
class Bullet extends FlyingObject{//子弹
}
class ShootGame{
     public static void main(String[] args){
     }
}

上午共15个
此时完成了9个
还剩下6个步骤：
    前4个步骤---------写4个类的构造方法
    第5个步骤---------画窗口
    第6个步骤---------在窗口画对象
    
在窗口上画对象
1.有窗口-----------完了
2.有对象-----------完了
3.窗口上画对象

Hero hero = new Hero();
Bullet[] bullets = {};
FlyingObject[] flyings = {};//敌人(敌人+小蜜蜂)



int a = (int)(Math.random()*100);//0到99的

Random rand = new Random();
int a = rand.nextInt(2);//0到1的

C/S:客户端/服务器
B/S:浏览器/服务器

swing:
1.JFrame:框架
2.JPanel:面板

frame.setVisible(true);//尽快调用paint()
1.调用了paint()方法
2.自己没有写paint()
3.但是还不报错
4.原因:
   Jpanel父类中有一个paint()方法,什么也没帮你画
         需要重写paint()方法

paint()方法非常特殊:只能由系统来调用


Shoot射击游戏第一天
1.class FlyingObject{
    image,width,height,x,y
}
2.interface Enemy{
    int getScore();
}
3.interface Award{
    DOUBLE_FILE,LIFE
    int getType();
}
4.class Airplane  extends 1 implements 2{
    speed
    Airplane(){}
           重写getScore()
}
5.class Bee extends 1 implements 3{
    xSpeed,ySpeed,awardType
    Bee(){}
           重写getType()
}
6.class Bullet extends 1{
    speed
    Bullet(int x, int y){}
}
7.class Hero extends 1{
     life,doubleFire,images,index
     Hero(){}
}
8.class ShootGame extends JPanel{
     WIDTH,HEIGHT
     
     background,start,pause,gameover
     airplane,bee,bullet,hero0,hero1
     static{}//做4个类的构造方法
     
     main(){
       ...
       frame.setVisible(true);//1.可见 2.尽快调paint()
     }
     
     hero(Hero)
     flyings(FlyingObject[])
     bullets(Bullet[])
     ShootGame(){初始化对象}
     
               重写paint(g){
                     画背景图
       paintHero(g);
       paintFlyingObjects(g);
       paintBullets(g);         
      }
     paintHero(g){}//画英雄机
     paintFlyingObjects(g){}//画敌人
     paintBullets(g){}//画子弹

}


Shoot射击游戏第二天：
1.敌人入场
2.飞行物(敌机，小蜜蜂，子弹，英雄机)走一步
3.子弹入场
4.英雄机随着鼠标动
5.删除越界的飞行物

敌人入场：定时发生的
1.创建敌人(敌机+小蜜蜂)对象 
2.将敌人对象添加到flyings数组中

TimerTask       
                   TimerTask tt
timer.schedule(new TimerTask(){
    public void run(){//定时干的那个事
    
    }
},10,10);

class Aoo extends TimerTask{}

第一个10：从程序启动到第一次触发的时间间隔
第二个10：第一次触发到第二次触发的时间间隔
                      第二次触发到第三次触发的时间间隔
                      第三次触发到第四次触发的时间间隔

定个表明天早上7点

定时器Timer 
//生成敌人(敌机+小蜜蜂)对象
public FlyingObject nextOne(){
    return new Airplane();
}

子弹入场：
1.创建子弹对象 
2.将子弹对象添加到bullets数组中

1.敌人入场的实现步骤：
  1)main(){game.action();}
  2)action(){
     ...
     run(){//10毫秒定时执行
       enteredAction();//敌人入场
       }
     }

  3)int index = 0;
    enterAction(){ //10毫秒走一次
        index++;
		if(index%40==0){//40*10毫秒
			FlyingObject one = nextOne();//获取敌人(敌机+小蜜蜂)对象 
			flyings = Arrays.copyOf(flyings, flyings.length+1);//扩容
			flyings[flyings.length-1] = one;//将生成的敌人对象添加到数组的最后一个元素上			
		}
	}
  4)nextOne(){
	     生成0到19的随机数
	     为0时return new Bee();
	     否则return new Airplane();
    }
    
    